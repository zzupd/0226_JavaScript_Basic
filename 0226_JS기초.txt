[02.26. 학습일정]

1. JavaScript 기초
2. RWD + 교재 + 수행평가
                       (=이수자평가)
3. 상담

----------------------------------


W3C => ECMAScript => LiveScript => JavaScript

웹디자이너
기획 + 2D디자인

퍼블리셔(Web Publisher)
기획 + 2D디자인 + HTML + CSS 
+ JavaScript 기본적인 작업

프론트엔드 개발자(Front-End Developer)
HTML + CSS
+ JavaScript(고급 작업 : Framework => Server    +   DB)
                               프레임워크       Node.js       MongoDB
                           React, Vue, Angular
                          리액트   뷰    앵귤러

백엔드 개발자(Back-End Developer)
HTML + CSS  => 기초적인 작업
+ JavaScript 고급 작업
+ Server                  +    DB
 IIS, Apache, Tomcat      Oracle, MS-SQL, MySQL, ACCESS, Cubrid,...

Visual Basic, ASP, C


----------------------------------------------------


[JS 실습]
폴더명 => 
D:\webPub_1201\kjj\silsp\js\basic
html파일명 => silsp.html

-----------------------------------

   [ CSS 코드 적용방법 ]

1. html 요소에 직접 사용
   => 인라인(In - Line) CSS
   보기.   <div style="color: #f00">내용</div>    줄, Line

2. html 파일에서 <style>요소를
   만들고 적용하는 CSS
    => 내부(Inner, 이너) CSS
     <head> ....
           <style> 
              p { font-size: 20px; }
           </style>
     </head>
     <body>
          <p>내용</p>
     </body>


3. html파일과는 다른 별도의
   CSS파일을 만들어서
   적용하는 방법
   => 외부(Outer, 아우터) CSS

     html파일: test.html                            html파일: test.html 
     <head> ....                                    <head> ....
           <style>                                     <link type="text/css"
              p { font-size: 20px; }                      href="style.css">
           </style>                                 </head>
     </head>                                       <body>
     <body>                                            <p>내용</p>
          <p>내용</p>                            </body>
     </body>
                                                         -------------------
                                                           css파일: style.css
                                                            @charset "UTF-8";
                                                            p { font-size: 20px; } 

-----------------------------------

   [ JS 코드 적용방법 ]
1. 인라인 JS
   => CSS는 html태그에 style 속성만 사용함.
         <div style="color: #f00">내용</div>
   => JS는 html태그에 이벤트 핸들러속성들을 사용함.
         <div 이벤트핸들러속성="JS코드">내용</div>
           ㆍ이벤트핸들러속성 
                   onclick="JS코드"     클릭했을 때 JS 실행
                   onfocus="JS코드"    포커스가 설정되었을 때
                                      (a요소, form 하위요소만 적용되며
                                       다른 요소들은 포커스기능을 별도로
                                       설정해야만 가능하다.)
                   onblur="JS코드"   onfocus는 포커스가 위치했을 때를
                                      의미하며 onblur는 위치했던 포커스가
                                      떠나갔을 때를 의미한다
                                           
                  onmouseover="JS"   CSS의 hover와 동일함.
                  onmouseout="JS"   CSS에서 hover상태였다가
                                            대상을 마우스가 떠났을 때함.
                   onkeypress, onkeyup => 키보드의 키를 눌렀을 때와
                                                     눌렀다가 손가락을 땠을 때

       alert("출력할 내용" );   => 알람창 (함수), 알림창 (함수),
          소괄호      경고창 (함수)
          자료형(Data Type)
              1+2 => 3      계산가능여부  숫자형
              "1" + "2"  => "12"  표기만 가능  문자(열)형
              "1" + "2+3"  => "12+3"      
                    문자자료형에서 + 기호는 연결만한다
                    따옴표내부의 내용은 있는 그대로 
                    표현한다.
              "1" + 2 => 문자형과 숫자형이 함께 사용되면
                              숫자형이 문자형으로 변경 후
                              결과를 출력한다.
                              그러므로 다음 과정을 거쳐
                              결과가 출력된다.
                              "1" + 2 => "1" + "2" => "12"
              1+2+"3"  => 3+"3"  =>  "33"
              "1" + 2 + 3  => "1" + "2" + 3 =>
                                    "12" + 3   => 
                                    "12" + "3" =>   "123"

                4 * 2 + 3  => 11
                4 + 2 * 3  => 4 + 6 => 10
                모든 계산은 왼쪽부터 시작된다
                단, 곱셈과 나눗셈 계산이
                덧셈, 뺄셈 계산보다 먼저 실행된다.
                왼쪽부터 시작되지 않고 특정 부분부터
                계산하려면 소괄호로 묶어준다.
                (4 + 2) * 3 => 6 * 3 => 18


        alert{ }   중괄호
        alert[ ]   대괄호


         alert("출력할 내용");
        외부에서 따옴표가 이미 사용되었다면
        홑따옴표로 변경하여 사용해야만 한다.

        자바스크립트는 오류가 발생하면
        오류가 발생한 코드부터 실행되지 않고
        결과도 출력되지 않는다.
        => 눈에 보이지 않는 결과를 수정하여 올바르게
             실행할 수 있도록 방법을 제공한다.
             개발자도구(기능키 F12)를 사용하여
             오류코드를 수정한다.

silsp.html:20 
Uncaught SyntaxError: 
              Syntax => 코드 작성 규칙(=문법)
              Error => 오류
              문법 오류, 문법 에러, 코드 작성 규칙 오류

Unexpected end of input
불필요한,
또는 제거해야하는
                             
 <div onclick="alert("OK")">

2. 내부 JS
   <head>요소 내부에 <style>요소 아랫줄에
   <script> 요소를 사용하여 자바스크립트 코드를 기재한다.
   html요소에서 자바스크립트를 사용하려면 함수를 자바스크립트
   코드에 만든다.
   => 함수 만드는 방법                     html 태그에서 함수를
                                                   실행하는 방법
                                                   (= 호출하는 방법)

     function 함수명( ) {        <태그 이벤트핸들러속성="함수명( )">
          필요한 JS 코드;           내용
     }                                </태그>
                  동일한 이름의 함수명이 호출되어서 적용된다.



            /* 세미콜론 ( ; ), 구분자(separator 세퍼레이터, 
            delimiter 딜리미터) */



silsp.html:31 
Uncaught Reference Error: 
              참조        오류

sample is not defined
at HTMLDivElement.onclick 


silsp.html:31 
Uncaught ReferenceError: 

samplE1 is not defined
    at HTMLDivElement.onclick 


함수명 규칙
1. 첫 글자 숫자 안됨

silsp.html:18

Uncaught SyntaxError: 

   Invalid    or     unexpected            token
 올바르지 않거나   제거해야하는      소스코드 일부


silsp.html:18 

Uncaught SyntaxError: 

Unexpected        identifier                                   
제거해야 하는     함수명 (식별자)
 => 함수, 변수, 객체 이름을 잘못 작성했음

식별자에는 함수명, 변수명, 객체명 등등이 있다.


[JS 식별자 규칙]
1. 숫자 시작 안됨
2. 공백 안됨
3. 대소문자 구분
4. 특수기호는 밑줄( _ ) 과  미국 화폐기호 ( $ ) 만 가능함
                  언더바, 언더스코어          스트링
                underbar   underscore         string
5. JS에서 사용하는 코드안됨.
    alert, document, script, var, let, ....
                  


3. 외부 JS
  1) 외부 파일명 규칙
    자바스크립트 파일을 별도로 만듬
    확장자는 .js 를 사용해야 함.
  2) html 코드에서 외부 JS파일을 사용하는 방법
    참고. 외부 CSS 파일 사용법 =>
           <link rel="stylesheet" href="외부CSS파일 URL">

    외부 자바스크립트 파일명 =>   /script/script.js
    html 코드에서 외부 자바스크립트 파일 사용하는 코드
   =>  <script src="script/script.js"></script>

    참고.
         외부 자바스크립트 파일을 사용했을 경우
         <script> 요소의 내용을 기재하면 안됨
         =>
         <script src="script/script.js">내용, alert("OK")</script> 
   

-------------------------------

document.getElementById("ID속성명")을 
사용하여 CSS 적용 방법 =>

1. style 속성 기재
   document.getElementById("ID속성명").style

2. style 속성을 기재하고
    CSS 사용했던 CSS 속성을 기재한다.
    단, 일부 속성값이 다름
    1) 글자색상(color) =>
          document.getElementById("ID속성명").style.color
                                                                   -------
                                                                    CSS 속성
     2) 글자 크기(font-size) =>
          document.getElementById("ID속성명").style.fontSize

3. CSS속성을 자바스크립트 속성에 
   맞게 작성한 후 (보기. font-size => fontSize)
   "=" 기호를 기재한 후 CSS 속성값을 문자열 자료형(=따옴표)으로
   기재한다.

    1) 글자색상(color) =>
          document.getElementById("ID속성명").style.color = "#f00";
                                                                   
     2) 글자 크기(font-size) =>
          document.getElementById("ID속성명").style.fontSize = "30px";

     참고. 문자(열) 자료형 => 따옴표를 사용한 값
              보기.   1 => 숫자 자료형   ,   "1" => 문자(열) 자료형

4. JS에서 CSS 사용법을 모를 경우
   W3School에서 CSS Reference를 참조하여 사용법을 확인한다.

    보기.  글씨 크기 적용

W3School의 Reference
JavaScript syntax:	
                  object (특정 대상)                     .style.fontSize="14px"
        ------------------------------------------    ------------------------
실제 코드
         document.getElementById("ID속성명")    .style.fontSize = "30px";









